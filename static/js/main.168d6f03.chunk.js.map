{"version":3,"sources":["utils/index.js","services/firebase.js","services/pokeAPI.js","components/PokeCard/index.js","utils/IsLogged.js","pages/Home/index.js","pages/Login/index.js","components/Loader/index.js","pages/Detail/index.js","pages/Favorites/index.js","pages/Register/index.js","components/Layout/index.js","Routes.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["notify","type","text","id","toast","success","error","info","toastId","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","a","signInWithPopup","res","user","collection","where","uid","get","docs","length","add","name","displayName","authProvider","email","signInWithEmailAndPassword","password","console","registerWithEmailAndPassword","createUserWithEmailAndPassword","addFavorites","setDoc","doc","favorites","updateFavorites","document","updateDoc","arrayUnion","removeFavorites","arrayRemove","getPokeInfo","url","axios","method","PokeCard","props","useState","pokemon","setPokemon","docListener","setDocListener","favoritesList","setFavoritesList","isFavorite","setIsFavorite","useEffect","onSnapshot","snapshot","list","map","data","filter","item","then","includes","className","to","pathname","state","Button","onClick","e","preventDefault","handleClick","Icon","src","alt","handlePokeInfo","IsLogged","useAuthState","loading","history","useHistory","replace","Home","listado","setListado","offSet","setOffset","lista","getListado","results","catch","Container","multiFactor","handleListado","target","variant","Login","setEmail","setPassword","push","value","onChange","placeholder","LoaderComponent","show","open","setOpen","undefined","setTimeout","Modal","color","height","width","visible","Detail","location","entry","setEntry","getPokeEntry","types","idx","flavor_text_entries","flavor_text","growth_rate","Favorites","sort","b","reverse","poke","pokeUrl","Register","setName","Layout","children","indexOf","setValue","parseInt","signOut","BottomNavigation","showLabels","event","newValue","BottomNavigationAction","label","icon","Routes","basename","process","exact","path","component","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.168d6f03.chunk.js","sourcesContent":["import { toast } from 'react-toastify';\r\n\r\nexport const notify = (type, text, id) => {\r\n  const toastType = {\r\n    success: 'success',\r\n    error: 'error',\r\n    info: 'info',\r\n  }\r\n  toast[toastType[type]](text, {\r\n    toastId: id\r\n  })\r\n}","import firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\nimport 'firebase/compat/firestore'\r\nimport { notify } from '../utils/index'\r\nimport { doc, setDoc, arrayUnion, arrayRemove, updateDoc  } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyChPfb0-bn7Wgji2NDlJKKvSeD7ZUhuWk0\",\r\n  authDomain: \"test-front-beccd.firebaseapp.com\",\r\n  projectId: \"test-front-beccd\",\r\n  storageBucket: \"test-front-beccd.appspot.com\",\r\n  messagingSenderId: \"389550173889\",\r\n  appId: \"1:389550173889:web:f90b37bece219bb53d6e40\"\r\n}\r\n\r\nconst app = firebase.initializeApp(firebaseConfig)\r\nconst auth = app.auth()\r\nconst db = app.firestore()\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider)\r\n    const user = res.user\r\n    const query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", user.uid)\r\n      .get()\r\n    if (query.docs.length === 0) {\r\n      await db.collection(\"users\").add({\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n      })\r\n    }\r\n  } catch (err) {\r\n    notify('error', '!Upss el usuario no se ha podido conectar, por favor verifica tus datos!', 'error_adding_favorite')\r\n  }\r\n}\r\n\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    const res = await auth.signInWithEmailAndPassword(email, password)\r\n  } catch (err) {\r\n    console.error(err)\r\n    notify('error', '!Upss el usuario no existe en nuestra base, por favor revisa tus datos!', 'error_auth')\r\n  }\r\n}\r\n\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password)\r\n    const user = res.user\r\n    await db.collection(\"users\").add({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    })\r\n  } catch (err) {\r\n    notify('error', '!Upss el usuario no se ha podido crear, por favor verifica tus datos!', 'error_register')\r\n  }\r\n}\r\n\r\n\r\nconst addFavorites = async (id, email) => {\r\n  try {\r\n    const docRef = await setDoc(doc(db, \"usuarios\", email), {\r\n      favorites: [id]\r\n    });\r\n  } catch (e) {\r\n    notify('error', '!Upss ha ocurrido un error, vuelve a intentarlo más tarde!', 'error_adding_favorite')\r\n  }\r\n}\r\n\r\nconst updateFavorites = async (id, email) => {\r\n  const document = doc(db, \"usuarios\", email);\r\n  try {\r\n    await updateDoc(document, {\r\n      favorites: arrayUnion(id)\r\n    })\r\n  } catch (e) {\r\n    notify('error', '!Upss ha ocurrido un error, vuelve a intentarlo más tarde!', 'error_updating_favorite')\r\n  }\r\n};\r\n\r\nconst removeFavorites = async (id, email) => {\r\n  const document = doc(db, \"usuarios\", email);\r\n  try {\r\n    await updateDoc(document, {\r\n      favorites: arrayRemove(id)\r\n    })\r\n  } catch (e) {\r\n    notify('error', '!Upss ha ocurrido un error, vuelve a intentarlo más tarde!', 'error_removing_favorite')\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  auth.signOut()\r\n}\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  updateFavorites,\r\n  removeFavorites,\r\n  addFavorites,\r\n  signInWithGoogle,\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  logout,\r\n}","import axios from 'axios'\r\n\r\nexport const getListado = (offset = 0) => {\r\n  const url = `https://pokeapi.co/api/v2/pokemon/?limit=20&offset=${offset}`\r\n  return axios({\r\n    method: 'GET',\r\n    url\r\n  })\r\n}\r\n\r\nexport const getPokeInfo = (url) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url\r\n  })\r\n}\r\n\r\nexport const getUrl = (id) => {\r\n  const url = `https://pokeapi.co/api/v2/pokemon/${id}`\r\n  return url\r\n}\r\n\r\n\r\nexport const getPokeEntry = (id) => {\r\n  const url = `https://pokeapi.co/api/v2/pokemon-species/${id}/`\r\n  return axios({\r\n    method: 'GET',\r\n    url\r\n  })\r\n}\r\n\r\n// export async function getListado(offset) {\r\n//   const result = await callAPI(offset)\r\n//   return\r\n// }","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { addFavorites, updateFavorites, removeFavorites, db } from '../../services/firebase'\r\nimport { getPokeInfo } from '../../services/pokeAPI'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Button } from '@mui/material';\r\n\r\nimport './PokeCard.scss'\r\n\r\nexport default function PokeCard(props) {\r\n  const { url, user } = props\r\n  const [pokemon, setPokemon] = useState(null)\r\n  const [docListener, setDocListener] = useState(0)\r\n  const [favoritesList, setFavoritesList] = useState(0)\r\n  const [isFavorite, setIsFavorite] = useState(false)\r\n  useEffect(() => {\r\n    const unsubscribe = db\r\n      .collection(\"usuarios\")\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        const list = data.filter(item => item.id === user)\r\n        list !== docListener && setDocListener(list[0]);\r\n      });\r\n  }, [pokemon])\r\n\r\n  useEffect(() => {\r\n    if (!pokemon) {\r\n      const info = getPokeInfo(url)\r\n      info\r\n      .then(res => setPokemon(res.data))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (pokemon && docListener) {\r\n      setFavoritesList(docListener.favorites)\r\n    }\r\n  }, [docListener])\r\n\r\n  useEffect(() => {\r\n    if (favoritesList) {\r\n      favoritesList.includes(pokemon.id) ? setIsFavorite(true) : setIsFavorite(false)\r\n    }\r\n  }, [docListener, favoritesList])\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    setIsFavorite(!isFavorite)\r\n    if (!isFavorite) {\r\n      if (docListener !== 0) {\r\n        if (typeof (docListener) === 'object') {\r\n          return updateFavorites(pokemon.id, user)\r\n        }\r\n        return addFavorites(pokemon.id, user)\r\n      }\r\n    }else {\r\n      return removeFavorites(pokemon.id, user)\r\n    }\r\n  }\r\n\r\n  const handlePokeInfo = () => {\r\n    if (pokemon) {\r\n      const { name, id } = pokemon\r\n      return (\r\n        <Link\r\n          className=\"poke-card container\"\r\n          to={{\r\n          pathname: `/pokemon/${name}`,\r\n          state: {pokemon, isFavorite}\r\n          }}>\r\n          <div className=\"poke-card__title\">\r\n            <h5>#{id} - {name}</h5>\r\n            <Button\r\n              name={id}\r\n              onClick={(e) => {handleClick(e)}}\r\n            >\r\n              <Icon name={id}>{isFavorite ? 'favorite' : 'favorite_border'}</Icon>\r\n            </Button>\r\n          </div>\r\n          <div className=\"poke-card__body\">\r\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`} alt={`logo pokemon #${id}`} />\r\n          </div>\r\n        </Link>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n  return handlePokeInfo()\r\n}\r\n\r\nPokeCard.propTypes = {\r\n  url: PropTypes.string,\r\n  user: PropTypes.object,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport { useHistory } from \"react-router\"\r\nimport { auth } from \"../services/firebase\"\r\n\r\nconst IsLogged = () => {\r\n  const [user, loading, error] = useAuthState(auth)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (loading) return\r\n    if (!user) return history.replace(\"/\")\r\n  }, [user, loading])\r\n\r\n  return [user, loading]\r\n}\r\n\r\nexport default IsLogged","import React, { useEffect, useState } from \"react\"\r\nimport { Container, Button } from '@mui/material'\r\n\r\nimport PokeCard from \"../../components/PokeCard\"\r\n\r\nimport { getListado } from '../../services/pokeAPI'\r\nimport { auth } from \"../../services/firebase\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport { notify } from '../../utils/'\r\nimport IsLogged from \"../../utils/IsLogged\"\r\n\r\nimport \"./Home.scss\"\r\n\r\nfunction Home() {\r\n  const [user, loading, error] = useAuthState(auth)\r\n  const [listado, setListado] = useState(null)\r\n  const [offSet, setOffset] = useState(null)\r\n\r\n  IsLogged()\r\n\r\n  useEffect(() =>{\r\n    const lista = getListado(offSet)\r\n    lista\r\n    .then(res => setListado(res.data.results))\r\n    .catch(error => notify('error', '¡Upps, parece que la base de datos de la pokedex está en actualización, prueba más tarde!', 'getListadoError'))\r\n  },[offSet])\r\n\r\n  const handleListado = () => {\r\n    if(listado && user) {\r\n      return listado.map(pokemon => {\r\n        return (\r\n          <PokeCard\r\n            user={user.multiFactor.user.email}\r\n            key={pokemon.name}\r\n            url={pokemon.url}/>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleClick = ({name}) => {\r\n    if (name === 'next') setOffset(offSet + 20)\r\n    if (name === 'back') setOffset(offSet - 20)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <section className=\"home\">\r\n        { user && handleListado()}\r\n      </section>\r\n      <div className=\"home__nav-buttons\">\r\n        <Button\r\n          name=\"back\"\r\n          onClick={({target}) => handleClick(target)}\r\n          variant=\"contained\">\r\n          {`< Back`}\r\n        </Button>\r\n        <Button\r\n          name=\"next\"\r\n          onClick={({target}) => handleClick(target)}\r\n          variant=\"contained\">\r\n          {`Next >`}\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nexport default Home","import React, { useEffect, useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nimport { auth, signInWithEmailAndPassword, signInWithGoogle } from \"../../services/firebase\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\n\r\nimport \"./Login.scss\"\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [user, loading, error] = useAuthState(auth)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return\r\n    }\r\n    if (user) history.push(\"/home\")\r\n  }, [user, loading])\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"login__textBox\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"E-mail Address\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"login__textBox\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button\r\n          className=\"login__btn\"\r\n          onClick={() => signInWithEmailAndPassword(email, password)}\r\n        >\r\n          Login\r\n        </button>\r\n        <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\r\n          Login with Google\r\n        </button>\r\n        <div>\r\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Login","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Modal } from '@mui/material'\r\nimport Loader from \"react-loader-spinner\"\r\n\r\nimport './Loader.scss'\r\n\r\nexport default function LoaderComponent({show}) {\r\n  const [open, setOpen] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (show === null || show === undefined) {\r\n      setTimeout(() => setOpen(false), 500)\r\n    } else {\r\n      setOpen(show)\r\n    }\r\n  }, [show])\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className=\"loader-modal\"\r\n        open={open}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Loader\r\n          type=\"Grid\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          visible={open}\r\n        />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport LoaderComponent from '../../components/Loader'\r\nimport { getPokeEntry, getPokeInfo } from '../../services/pokeAPI'\r\nimport IsLogged from \"../../utils/IsLogged\"\r\n\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Button, Container } from '@mui/material';\r\n\r\nimport './Detail.scss'\r\n\r\nexport default function Detail(props) {\r\n  const { pathname } = props.location\r\n  const [pokemon, setPokemon] = useState(null)\r\n  const [entry, setEntry] = useState(null)\r\n  const [favorite, setFavorite] = useState(false)\r\n  const urlBase = 'https://pokeapi.co/api/v2'\r\n\r\n  IsLogged()\r\n\r\n  useEffect(() => {\r\n    if (!pokemon) {\r\n      const info = getPokeInfo(`${urlBase}${pathname}`)\r\n      info\r\n      .then(res => setPokemon(res.data))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(pokemon && !entry) {\r\n      const info = getPokeEntry(pokemon.id)\r\n      info\r\n      .then(res => setEntry(res.data))\r\n    }\r\n  }, [pokemon])\r\n\r\n  const showTypes = () => (\r\n    pokemon.types.map((type, idx )=> <label key={`${type.type.name}-${idx}`}>{type.type.name}</label>)\r\n  )\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    setFavorite(!favorite)\r\n  }\r\n\r\n  const handlePokeInfo = () => {\r\n    if (pokemon) {\r\n      const { name, id } = pokemon\r\n      return (\r\n        <Container>\r\n          <LoaderComponent />\r\n          <section className=\"detail-card container\" to={`/${name}`}>\r\n            <div className=\"detail-card__title\">\r\n              <h3>#{id} - {name}</h3>\r\n                <Icon name={id}>circle-border</Icon>\r\n            </div>\r\n            <div className=\"detail-card__body\">\r\n              <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`} alt={`logo pokemon #${id}`} />\r\n              <section>\r\n                <div className=\"detail-card__types\">\r\n                  {showTypes()}\r\n                </div>\r\n                { entry &&\r\n                  <h5>\r\n                    {entry.flavor_text_entries[10].flavor_text}\r\n                  </h5>\r\n                }\r\n                { entry &&\r\n                  <h5>\r\n                    Growth rate: {entry.growth_rate.name}\r\n                  </h5>\r\n                }\r\n              </section>\r\n            </div>\r\n          </section>\r\n        </Container>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n  return handlePokeInfo()\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport PokeCard from \"../../components/PokeCard\"\r\n\r\nimport { db } from '../../services/firebase'\r\nimport { getUrl } from '../../services/pokeAPI'\r\nimport { auth } from \"../../services/firebase\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\n\r\nimport { Container } from '@mui/material';\r\n\r\nexport default function Favorites() {\r\n  const [user, loading, error] = useAuthState(auth)\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [docListener, setDocListener] = useState(0)\r\n  const [favoritesList, setFavoritesList] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const unsubscribe = db\r\n      .collection(\"usuarios\")\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        const list = data.filter(item => item.id === user.multiFactor.user.email)\r\n        setDocListener(list[0]);\r\n      });\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (favoritesList) {\r\n      favoritesList.sort((a, b) => a-b)\r\n      favoritesList.reverse().map((poke) => {\r\n        return setPokemon(pokemon => [getUrl(poke), ...pokemon])\r\n      })\r\n    }\r\n  }, [favoritesList])\r\n\r\n  useEffect(() => {\r\n    if (docListener) {\r\n      setFavoritesList(docListener.favorites)\r\n    }\r\n  }, [docListener])\r\n\r\n  const handleListado = () => {\r\n    if(pokemon && user) {\r\n      return pokemon.map((pokeUrl, idx) => {\r\n        return (\r\n          <PokeCard\r\n            user={user.multiFactor.user.email}\r\n            key={`favorite-${idx}`}\r\n            url={pokeUrl}/>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <section className=\"home\">\r\n        { handleListado() }\r\n      </section>\r\n    </Container>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nimport { auth, registerWithEmailAndPassword } from \"../../services/firebase\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\n\r\nimport \"./Register.scss\"\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [user, loading, error] = useAuthState(auth)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return\r\n    }\r\n    if (user) history.push(\"/home\")\r\n  }, [user, loading])\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register__container\">\r\n      <input\r\n          type=\"text\"\r\n          className=\"register__textBox\"\r\n          value={name}\r\n          onChange={({target}) => setName(target.value)}\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"register__textBox\"\r\n          value={email}\r\n          onChange={({target}) => setEmail(target.value)}\r\n          placeholder=\"E-mail Address\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"register__textBox\"\r\n          value={password}\r\n          onChange={({target}) => setPassword(target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button\r\n          className=\"register__btn\"\r\n          onClick={() => registerWithEmailAndPassword(name, email, password)}\r\n        >\r\n          Register\r\n        </button>\r\n        <div>\r\n          Already have an account? <Link to=\"/\">Login</Link> now.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Register","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { BottomNavigation, BottomNavigationAction } from '@mui/material'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport { logout } from '../../services/firebase'\r\nimport IsLogged from \"../../utils/IsLogged\"\r\n\r\nimport './Layout.scss'\r\n\r\nconst url = [\r\n  '/home',\r\n  '/favorites'\r\n]\r\n\r\nexport default function Layout({children}) {\r\n  const history = useHistory()\r\n  const [value, setValue] = useState(url.indexOf(history.location.pathname))\r\n\r\n  useEffect(() => {\r\n    if ([0,1].includes(value)) {\r\n      history.push(url[value])\r\n    } else if (parseInt(value) === 2){\r\n      logout()\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <section className=\"layout\">\r\n      {children}\r\n      <BottomNavigation\r\n        showLabels\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue)\r\n        }}\r\n      >\r\n        <BottomNavigationAction label=\"Home\" icon={<Icon>home</Icon>} />\r\n        <BottomNavigationAction label=\"Favorites\" icon={<Icon>favorite</Icon>} />\r\n        <BottomNavigationAction label=\"Logout\" icon={<Icon>logout</Icon>} />\r\n      </BottomNavigation>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom'\r\n\r\nimport Home from './pages/Home'\r\nimport Login from './pages/Login'\r\nimport Detail from './pages/Detail'\r\nimport Favorites from './pages/Favorites'\r\nimport Register from './pages/Register'\r\nimport Layout from './components/Layout'\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route>\r\n          <Layout>\r\n            <Switch>\r\n              <Route exact path=\"/home\" component={Home} />\r\n              <Route exact path=\"/favorites\" component={Favorites} />\r\n              <Route exact path=\"/pokemon/:name\" component={Detail} />\r\n            </Switch>\r\n          </Layout>\r\n        </Route>\r\n      </Switch>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        />\r\n        {/* Same as */}\r\n      <ToastContainer />\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import React from 'react'\nimport './App.css'\n\nimport Routes from './Routes'\n\nfunction App() {\n  return (\n    <Routes />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}